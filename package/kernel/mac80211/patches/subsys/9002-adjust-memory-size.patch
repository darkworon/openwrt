--- a/include/net/fq_impl.h
+++ b/include/net/fq_impl.h
@@ -356,7 +356,7 @@ static int fq_init(struct fq *fq, int fl
 	fq->flows_cnt = max_t(u32, flows_cnt, 1);
 	fq->quantum = 300;
 	fq->limit = 8192;
-	fq->memory_limit = 16 << 20; /* 16 MBytes */
+	fq->memory_limit = 32 << 20; /* 32 MBytes */
 
 	fq->flows = kvcalloc(fq->flows_cnt, sizeof(fq->flows[0]), GFP_KERNEL);
 	if (!fq->flows)
--- a/net/mac80211/tx.c
+++ b/net/mac80211/tx.c
@@ -1587,9 +1587,9 @@ int ieee80211_txq_setup_flows(struct iee
 	if (ret)
 		return ret;
 
-	/*
+	/* 
 	 * If the hardware doesn't support VHT, it is safe to limit the maximum
-	 * queue size. 4 Mbytes is 64 max-size aggregates in 802.11n.
+	 * queue size. 4 (8 mod MT6000 testing) Mbytes is 64 max-size aggregates in 802.11n.
 	 */
 	for (band = 0; band < NUM_NL80211_BANDS; band++) {
 		struct ieee80211_supported_band *sband;
@@ -1602,7 +1602,7 @@ int ieee80211_txq_setup_flows(struct iee
 	}
 
 	if (!supp_vht)
-		fq->memory_limit = 4 << 20; /* 4 Mbytes */
+		fq->memory_limit = 8 << 20; /* 8 Mbytes */
 
 	codel_params_init(&local->cparams);
 	local->cparams.interval = MS2TIME(80);
