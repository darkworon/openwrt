From 83c9baf588f90ef7912c089107cdc0c1c8b5a081 Mon Sep 17 00:00:00 2001
From: John Audia <therealgraysky@proton.me>
Date: Wed, 3 Jul 2024 12:48:32 -0400
Subject: [PATCH] mt76: try revert patch to solve wifi crash

dmesg:
[ 3395.669339] mt798x-wmac 18000000.wifi: Message 00005aed (seq 3) timeout

logread:
Sun Jun 30 00:56:36 2024 kern.err kernel: [ 3395.669339] mt798x-wmac 18000000.wifi: Message 00005aed (seq 3) timeout
---
 .../mt76/patches/0001-drop-GET_MIB_INFO.patch | 226 ++++++++++++++++++
 1 file changed, 226 insertions(+)
 create mode 100644 package/kernel/mt76/patches/0001-drop-GET_MIB_INFO.patch

--- /dev/null
+++ b/package/kernel/mt76/patches/0001-drop-GET_MIB_INFO.patch
@@ -0,0 +1,226 @@
+From 750640735cd763312bf2a0f044d164053c0f94a7 Mon Sep 17 00:00:00 2001
+From: graysky <therealgraysky@proton.me>
+Date: Wed, 3 Jul 2024 12:44:22 -0400
+Subject: [PATCH] drop-GET_MIB_INFO
+
+https://github.com/openwrt/mt76/issues/860
+---
+ mt7915/init.c   |  1 +
+ mt7915/mac.c    | 32 +++++++++++++++++-----
+ mt7915/mcu.c    | 72 -------------------------------------------------
+ mt7915/mt7915.h |  1 -
+ mt7915/regs.h   | 12 +++++++++
+ 5 files changed, 39 insertions(+), 79 deletions(-)
+
+diff --git a/mt7915/init.c b/mt7915/init.c
+index eee18798..bffc94e3 100644
+--- a/mt7915/init.c
++++ b/mt7915/init.c
+@@ -515,6 +515,7 @@ mt7915_mac_init_band(struct mt7915_dev *dev, u8 band)
+ 	mask = MT_WF_RMAC_MIB_OBSS_BACKOFF | MT_WF_RMAC_MIB_ED_OFFSET;
+ 	set = FIELD_PREP(MT_WF_RMAC_MIB_OBSS_BACKOFF, 0) |
+ 	      FIELD_PREP(MT_WF_RMAC_MIB_ED_OFFSET, 4);
++	mt76_rmw(dev, MT_WF_RMAC_MIB_TIME0(band), mask, set);
+ 	mt76_rmw(dev, MT_WF_RMAC_MIB_AIRTIME0(band), mask, set);
+ 
+ 	/* filter out non-resp frames and get instanstaeous signal reporting */
+diff --git a/mt7915/mac.c b/mt7915/mac.c
+index 8008ce3f..4c37c151 100644
+--- a/mt7915/mac.c
++++ b/mt7915/mac.c
+@@ -1146,10 +1146,15 @@ void mt7915_mac_reset_counters(struct mt7915_phy *phy)
+ 	memset(phy->mt76->aggr_stats, 0, sizeof(phy->mt76->aggr_stats));
+ 
+ 	/* reset airtime counters */
++	mt76_rr(dev, MT_MIB_SDR9(phy));
++	mt76_rr(dev, MT_MIB_SDR36(phy));
++	mt76_rr(dev, MT_MIB_SDR37(phy));
++
++	mt76_set(dev, MT_WF_RMAC_MIB_TIME0(phy->mt76->band_idx),
++		 MT_WF_RMAC_MIB_RXTIME_CLR);
+ 	mt76_set(dev, MT_WF_RMAC_MIB_AIRTIME0(phy->mt76->band_idx),
+ 		 MT_WF_RMAC_MIB_RXTIME_CLR);
+ 
+-	mt7915_mcu_get_chan_mib_info(phy, true);
+ }
+ 
+ void mt7915_mac_set_timing(struct mt7915_phy *phy)
+@@ -1254,19 +1259,34 @@ mt7915_phy_get_nf(struct mt7915_phy *phy, int idx)
+ 
+ void mt7915_update_channel(struct mt76_phy *mphy)
+ {
++	struct mt7915_dev *dev = container_of(mphy->dev, struct mt7915_dev, mt76);
+ 	struct mt7915_phy *phy = mphy->priv;
+ 	struct mt76_channel_state *state = mphy->chan_state;
+-	int nf;
+-
+-	mt7915_mcu_get_chan_mib_info(phy, false);
+-
+-	nf = mt7915_phy_get_nf(phy, phy->mt76->band_idx);
++	u64 busy_time, tx_time, rx_time, obss_time;
++	int nf, idx = mphy->band_idx;
++
++	busy_time = mt76_get_field(dev, MT_MIB_SDR9(idx),
++				   MT_MIB_SDR9_BUSY_MASK);
++	tx_time = mt76_get_field(dev, MT_MIB_SDR36(idx),
++				 MT_MIB_SDR36_TXTIME_MASK);
++	rx_time = mt76_get_field(dev, MT_MIB_SDR37(idx),
++				 MT_MIB_SDR37_RXTIME_MASK);
++	obss_time = mt76_get_field(dev, MT_WF_RMAC_MIB_AIRTIME14(idx),
++				   MT_MIB_OBSSTIME_MASK);
++
++	nf = mt7915_phy_get_nf(phy, idx);
+ 	if (!phy->noise)
+ 		phy->noise = nf << 4;
+ 	else if (nf)
+ 		phy->noise += nf - (phy->noise >> 4);
+ 
++	state->cc_busy += busy_time;
++	state->cc_tx += tx_time;
++	state->cc_rx += rx_time + obss_time;
++	state->cc_bss_rx += rx_time;
+ 	state->noise = -(phy->noise >> 4);
++
++	mt76_set(dev, MT_WF_RMAC_MIB_TIME0(idx), MT_WF_RMAC_MIB_RXTIME_CLR);
+ }
+ 
+ static bool
+diff --git a/mt7915/mcu.c b/mt7915/mcu.c
+index 29e9d660..8f0c3f36 100644
+--- a/mt7915/mcu.c
++++ b/mt7915/mcu.c
+@@ -3086,78 +3086,6 @@ int mt7915_mcu_apply_tx_dpd(struct mt7915_phy *phy)
+ 	return 0;
+ }
+ 
+-int mt7915_mcu_get_chan_mib_info(struct mt7915_phy *phy, bool chan_switch)
+-{
+-	struct mt76_channel_state *state = phy->mt76->chan_state;
+-	struct mt76_channel_state *state_ts = &phy->state_ts;
+-	struct mt7915_dev *dev = phy->dev;
+-	struct mt7915_mcu_mib *res, req[5];
+-	struct sk_buff *skb;
+-	static const u32 *offs;
+-	int i, ret, len, offs_cc;
+-	u64 cc_tx;
+-
+-	/* strict order */
+-	if (is_mt7915(&dev->mt76)) {
+-		static const u32 chip_offs[] = {
+-			MIB_NON_WIFI_TIME,
+-			MIB_TX_TIME,
+-			MIB_RX_TIME,
+-			MIB_OBSS_AIRTIME,
+-			MIB_TXOP_INIT_COUNT,
+-		};
+-		len = ARRAY_SIZE(chip_offs);
+-		offs = chip_offs;
+-		offs_cc = 20;
+-	} else {
+-		static const u32 chip_offs[] = {
+-			MIB_NON_WIFI_TIME_V2,
+-			MIB_TX_TIME_V2,
+-			MIB_RX_TIME_V2,
+-			MIB_OBSS_AIRTIME_V2
+-		};
+-		len = ARRAY_SIZE(chip_offs);
+-		offs = chip_offs;
+-		offs_cc = 0;
+-	}
+-
+-	for (i = 0; i < len; i++) {
+-		req[i].band = cpu_to_le32(phy->mt76->band_idx);
+-		req[i].offs = cpu_to_le32(offs[i]);
+-	}
+-
+-	ret = mt76_mcu_send_and_get_msg(&dev->mt76, MCU_EXT_CMD(GET_MIB_INFO),
+-					req, len * sizeof(req[0]), true, &skb);
+-	if (ret)
+-		return ret;
+-
+-	res = (struct mt7915_mcu_mib *)(skb->data + offs_cc);
+-
+-#define __res_u64(s) le64_to_cpu(res[s].data)
+-	/* subtract Tx backoff time from Tx duration */
+-	cc_tx = is_mt7915(&dev->mt76) ? __res_u64(1) - __res_u64(4) : __res_u64(1);
+-
+-	if (chan_switch)
+-		goto out;
+-
+-	state->cc_tx += cc_tx - state_ts->cc_tx;
+-	state->cc_bss_rx += __res_u64(2) - state_ts->cc_bss_rx;
+-	state->cc_rx += __res_u64(2) + __res_u64(3) - state_ts->cc_rx;
+-	state->cc_busy += __res_u64(0) + cc_tx + __res_u64(2) + __res_u64(3) -
+-			  state_ts->cc_busy;
+-
+-out:
+-	state_ts->cc_tx = cc_tx;
+-	state_ts->cc_bss_rx = __res_u64(2);
+-	state_ts->cc_rx = __res_u64(2) + __res_u64(3);
+-	state_ts->cc_busy = __res_u64(0) + cc_tx + __res_u64(2) + __res_u64(3);
+-#undef __res_u64
+-
+-	dev_kfree_skb(skb);
+-
+-	return 0;
+-}
+-
+ int mt7915_mcu_get_temperature(struct mt7915_phy *phy)
+ {
+ 	struct mt7915_dev *dev = phy->dev;
+diff --git a/mt7915/mt7915.h b/mt7915/mt7915.h
+index a30d08eb..d698b8ba 100644
+--- a/mt7915/mt7915.h
++++ b/mt7915/mt7915.h
+@@ -222,7 +222,6 @@ struct mt7915_phy {
+ 	u32 ampdu_ref;
+ 
+ 	struct mt76_mib_stats mib;
+-	struct mt76_channel_state state_ts;
+ 
+ #ifdef CONFIG_NL80211_TESTMODE
+ 	struct {
+diff --git a/mt7915/regs.h b/mt7915/regs.h
+index 89ac8e67..6b43e308 100644
+--- a/mt7915/regs.h
++++ b/mt7915/regs.h
+@@ -326,6 +326,9 @@ enum offs_rev {
+ #define MT_MIB_SDR8(_band)		MT_WF_MIB(_band, __OFFS(MIB_SDR8))
+ #define MT_MIB_SDR8_RX_DELIMITER_FAIL_CNT_MASK	GENMASK(15, 0)
+ 
++#define MT_MIB_SDR9(_band)		MT_WF_MIB(_band, 0x02c)
++#define MT_MIB_SDR9_BUSY_MASK		GENMASK(23, 0)
++
+ /* aka CCA_NAV_TX_TIME */
+ #define MT_MIB_SDR9_DNR(_band)		MT_WF_MIB(_band, __OFFS(MIB_SDR9))
+ #define MT_MIB_SDR9_CCA_BUSY_TIME_MASK		GENMASK(23, 0)
+@@ -415,6 +418,11 @@ enum offs_rev {
+ #define MT_MIB_SDRMUBF(_band)		MT_WF_MIB(_band, __OFFS(MIB_SDRMUBF))
+ #define MT_MIB_MU_BF_TX_CNT		GENMASK(15, 0)
+ 
++#define MT_MIB_SDR36(_band)		MT_WF_MIB(_band, 0x098)
++#define MT_MIB_SDR36_TXTIME_MASK	GENMASK(23, 0)
++#define MT_MIB_SDR37(_band)		MT_WF_MIB(_band, 0x09c)
++#define MT_MIB_SDR37_RXTIME_MASK	GENMASK(23, 0)
++
+ /* 36, 37 both DNR */
+ 
+ #define MT_MIB_DR8(_band)		MT_WF_MIB(_band, __OFFS(MIB_DR8))
+@@ -557,10 +565,14 @@ enum offs_rev {
+ #define MT_WF_RMAC_RSVD0_EIFS_CLR	BIT(21)
+ 
+ #define MT_WF_RMAC_MIB_AIRTIME0(_band)	MT_WF_RMAC(_band, 0x0380)
++#define MT_WF_RMAC_MIB_TIME0(_band)	MT_WF_RMAC(_band, 0x03c4)
+ #define MT_WF_RMAC_MIB_RXTIME_CLR	BIT(31)
+ #define MT_WF_RMAC_MIB_OBSS_BACKOFF	GENMASK(15, 0)
+ #define MT_WF_RMAC_MIB_ED_OFFSET	GENMASK(20, 16)
+ 
++#define MT_WF_RMAC_MIB_AIRTIME14(_band)	MT_WF_RMAC(_band, 0x03b8)
++#define MT_MIB_OBSSTIME_MASK		GENMASK(23, 0)
++
+ #define MT_WF_RMAC_MIB_AIRTIME1(_band)	MT_WF_RMAC(_band, 0x0384)
+ #define MT_WF_RMAC_MIB_NONQOSD_BACKOFF	GENMASK(31, 16)
+ 
+-- 
+2.45.2
+
